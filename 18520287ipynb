{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"18520287ipynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"v1yYktJX1QaA","colab_type":"code","outputId":"bb11fab4-6915-4ffe-e8e0-f42173e5f804","executionInfo":{"status":"ok","timestamp":1578475031359,"user_tz":-420,"elapsed":20070,"user":{"displayName":"Huy Phan Phat","photoUrl":"","userId":"01335892537279290623"}},"colab":{"base_uri":"https://localhost:8080/","height":122}},"source":["from google.colab import drive \n","drive.mount('/drive')"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"srduL6Sq2v1B","colab_type":"code","colab":{}},"source":["#Tạo link đến file ảnh"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"4I7X8fqtLnvT","colab_type":"code","outputId":"757969de-80b6-4940-b2d5-bfb25cd9a07d","executionInfo":{"status":"ok","timestamp":1578475038703,"user_tz":-420,"elapsed":1240,"user":{"displayName":"Huy Phan Phat","photoUrl":"","userId":"01335892537279290623"}},"colab":{"base_uri":"https://localhost:8080/","height":54}},"source":["import os\n","folder= '/drive/My Drive/train/'\n","file = os.listdir(folder)\n","print(file)"],"execution_count":3,"outputs":[{"output_type":"stream","text":["['neg.18520245-1.jpg', 'pos.18520285-2.jpg', 'neg.18520339-11.jpg', 'pos.18520590-2.jpg', 'pos.17520374-8.jpg', 'neg.16521206-19.jpg', 'neg.18520245-10.jpg', 'neg.18520285-12.jpg', 'neg.18520245-8.jpg', 'pos.18520184-9.jpg', 'neg.18520590-7.jpg', 'neg.18520339-10.jpg', 'pos.18520184-4.jpg', 'pos.18520184-5.jpg', 'neg.17520374-2.jpg', 'pos.18520339-10.jpg', 'pos.18520285-3.jpg', 'pos.18520590-6.jpg', 'neg.16521206-22.jpg', 'pos.18520245-1.jpg', 'pos.17520374-4.jpg', 'neg.16521206-2.jpg', 'pos.18520339-14.jpg', 'neg.18520245-9.jpg', 'neg.18520285-15.jpg', 'neg.18520184-9.jpg', 'pos.18520285-7.jpg', 'pos.18520590-14.jpg', 'neg.18520184-5.jpg', 'pos.16521206-14.jpg', 'neg.18520184-6.jpg', 'pos.18520184-3.jpg', 'neg.16521206-20.jpg', 'neg.18520184-1.jpg', 'pos.16521206-16.jpg', 'neg.18520339-4.jpg', 'neg.18520590-14.jpg', 'pos.16520418-11.jpg', 'neg.18520339-6.jpg', 'pos.18520339-9.jpg', 'pos.18520339-12.jpg', 'pos.18520245-2.jpg', 'neg.17520374-4.jpg', 'neg.18520245-5.jpg', 'pos.18520339-13.jpg', 'neg.18520285-3.jpg', 'pos.18520590-1.jpg', 'pos.18520285-1.jpg', 'pos.18520285-8.jpg', 'neg.18520590-11.jpg', 'pos.16521206-15.jpg', 'pos.18520245-8.jpg', 'pos.18520184-1.jpg', 'neg.18520285-13.jpg', 'pos.16520418-15.jpg', 'pos.18520590-5.jpg', 'neg.18520285-7.jpg', 'pos.18520285-15.jpg', 'neg.18520590-8.jpg', 'pos.18520339-8.jpg', 'neg.18520285-4.jpg', 'pos.18520339-7.jpg', 'neg.18520184-13.jpg', 'pos.18520285-13.jpg', 'neg.18520590-9.jpg', 'pos.17520374-6.jpg', 'neg.18520245-3.jpg', 'pos.16520124-11.jpg', 'pos.18520184-2.jpg', 'neg.18520184-3.jpg', 'pos.18520285-6.jpg', 'pos.17520374-2.jpg', 'neg.18520339-5.jpg', 'neg.18520339-13.jpg', 'pos.17520374-7.jpg', 'pos.18520245-7.jpg', 'neg.17520374-6.jpg', 'pos.16520124-2.jpg', 'pos.18520285-10.jpg', 'pos.16520418-12.jpg', 'neg.18520339-9.jpg', 'neg.16521206-15.jpg', 'pos.18520339-11.jpg', 'neg.18520184-14.jpg', 'neg.17520374-3.jpg', 'pos.16521206-1.jpg', 'pos.17520374-5.jpg', 'neg.16521206-21.jpg', 'neg.17520374-5.jpg', 'pos.16520418-2.jpg', 'neg.18520285-8.jpg', 'pos.18520245-3.jpg', 'neg.18520285-1.jpg', 'neg.17520374-7.jpg', 'neg.18520245-2.jpg', 'pos.18520590-4.jpg', 'neg.18520339-7.jpg', 'pos.18520339-2.jpg', 'pos.18520285-12.jpg', 'pos.18520245-6.jpg', 'pos.16521206-3.jpg', 'pos.16520124-10.jpg', 'neg.18520285-14.jpg', 'pos.18520245-9.jpg', 'pos.18520285-5.jpg', 'pos.18520184-16.jpg', 'pos.18520184-13.jpg', 'pos.16520418-9.jpg', 'pos.17520374-1.jpg', 'neg.18520590-15.jpg', 'neg.18520339-15.jpg', 'neg.18520184-12.jpg', 'pos.18520590-3.jpg', 'neg.16520124-1.jpg', 'neg.18520339-8.jpg', 'neg.16521206-1.jpg', 'pos.18520339-4.jpg', 'neg.18520285-5.jpg', 'neg.18520184-8.jpg', 'pos.16520418-14.jpg', 'pos.18520245-10.jpg', 'pos.18520285-4.jpg', 'pos.18520339-3.jpg', 'neg.18520339-14.jpg', 'pos.16520124-1.jpg', 'pos.18520285-11.jpg', 'pos.17520374-3.jpg', 'pos.18520184-8.jpg', 'neg.18520245-6.jpg', 'neg.16521206-23.jpg', 'neg.18520339-12.jpg', 'pos.16520418-4.jpg', 'neg.18520590-13.jpg', 'pos.17520374-15.jpg', 'pos.18520590-9.jpg', 'neg.17520374-10.jpg', 'neg.17520374-12.jpg', 'neg.16520418-11.jpg', 'pos.16521206-5.jpg', 'neg.16520124-9.jpg', 'neg.18520590-6.jpg', 'neg.17520374-9.jpg', 'neg.16521206-8.jpg', 'neg.16520418-14.jpg', 'neg.17520374-11.jpg', 'pos.16520418-5.jpg', 'pos.18520590-10.jpg', 'neg.16520418-10.jpg', 'pos.17520374-10.jpg', 'pos.16520124-7.jpg', 'pos.18520590-13.jpg', 'neg.18520590-4.jpg', 'neg.16521206-5.jpg', 'pos.17520374-11.jpg', 'pos.17520374-13.jpg', 'neg.16520124-14.jpg', 'neg.16520418-15.jpg', 'pos.17520374-14.jpg', 'pos.16520418-3.jpg', 'pos.16520124-16.jpg', 'neg.16520124-13.jpg', 'pos.16520124-12.jpg', 'pos.16520418-7.jpg', 'pos.16520124-17.jpg', 'pos.16520418-1.jpg', 'pos.16520124-4.jpg', 'neg.16520124-6.jpg', 'neg.16521206-7.jpg', 'neg.16520418-7.jpg', 'neg.18520184-10.jpg', 'neg.18520590-3.jpg', 'neg.16520124-8.jpg', 'pos.16521206-10.jpg', 'pos.16520124-8.jpg', 'neg.16521206-11.jpg', 'neg.16521206-14.jpg', 'pos.16520124-3.jpg', 'neg.16520418-13.jpg', 'neg.16520418-5.jpg', 'neg.17520374-13.jpg', 'pos.18520184-11.jpg', 'neg.16520124-7.jpg', 'neg.16520124-2.jpg', 'pos.16520124-21.jpg', 'neg.16520124-15.jpg', 'pos.16521206-11.jpg', 'neg.18520590-2.jpg', 'pos.18520590-11.jpg', 'pos.16520124-13.jpg', 'neg.17520374-8.jpg', 'pos.16520124-9.jpg', 'neg.18520590-1.jpg', 'neg.18520590-5.jpg', 'neg.18520184-11.jpg', 'pos.16521206-9.jpg', 'pos.18520590-8.jpg', 'pos.16520124-14.jpg', 'neg.16520418-9.jpg', 'pos.18520184-10.jpg', 'pos.16520124-20.jpg', 'neg.16520124-5.jpg', 'neg.17520374-14.jpg', 'neg.18520590-12.jpg', 'neg.16521206-9.jpg', 'neg.16521206-16.jpg', 'neg.16520124-11.jpg', 'pos.18520184-12.jpg', 'pos.16520418-6.jpg', 'neg.16521206-13.jpg', 'pos.16521206-12.jpg', 'neg.16520418-3.jpg', 'neg.16520418-4.jpg', 'neg.16521206-12.jpg', 'pos.17520374-12.jpg', 'neg.17520374-15.jpg', 'neg.16520418-6.jpg', 'neg.16521206-4.jpg', 'pos.16520124-6.jpg']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"FkloVf4icF8v","colab_type":"code","colab":{}},"source":["# Tiến hành song song các bước:\n","# - Lấy ảnh mặt với tỉ lệ 50x50, chuyển màu thành xám\n","# - đưa ảnh thành chuỗi và lưu vào new_album\n","# - các nhãn sẽ lấy 3 kí tự đầu tiên lưu vào d, sau đó chuyển lại giá trị của d"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"DGfyVYV2MNe9","colab_type":"code","colab":{}},"source":["import os\n","import cv2\n","import pandas as pd\n","import numpy as np\n","from google.colab.patches import cv2_imshow\n","\n","new_album=[]\n","\n","d = pd.DataFrame(columns=['label'])\n","\n","for image in os.listdir(folder):\n","  fileface= folder + image\n","  img = cv2.imread( fileface )\n","\n","  cascade = cv2.CascadeClassifier(cv2.data.haarcascades + \"haarcascade_frontalface_default.xml\")\n","\n","  faces = cascade.detectMultiScale(img)\n","\n","  if len(faces) != 0:\n","   (x, y, w, h) = faces[0]\n","   r = max(w, h) / 2\n","   centerx = x + w / 2\n","   centery = y + h / 2\n","   nx = int(centerx - r)\n","   ny = int(centery - r)\n","   nr = int(r * 2)\n","\n","   faceimg = img[ny:ny+nr, nx:nx+nr]\n","\n","   faceimg=cv2.resize(faceimg, (50,50))\n","   faceimg=cv2.cvtColor(faceimg, cv2.COLOR_BGR2GRAY)\n","   \n","   flat = faceimg.flatten()\n","   new_ar = pd.DataFrame([flat])\n","\n","   d=d.append({'label':image[0:3]},ignore_index=True)\n","   \n","   new_album.append(new_ar)\n","   \n","  else:\n","   a=pd.DataFrame ([[0]*2500], columns=range(2500))\n","\n","   d=d.append({'label':image[0:3]},ignore_index=True)\n","\n","   new_album.append(a) \n","d=d.values.ravel()   \n","   "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7SZQXdMMI9K5","colab_type":"code","colab":{}},"source":["#  Gọi mô hình SVC thuộc SVM\n","# Lưu mô hình bằng pickle"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"unDNUA8lPf-s","colab_type":"code","outputId":"0cc808d9-53b8-4fdd-8976-9c17ee023f06","executionInfo":{"status":"ok","timestamp":1578476373305,"user_tz":-420,"elapsed":8273,"user":{"displayName":"Huy Phan Phat","photoUrl":"","userId":"01335892537279290623"}},"colab":{"base_uri":"https://localhost:8080/","height":241}},"source":["from sklearn.svm import SVC\n","\n","model = SVC()\n","model.fit( new_album ,  d  )\n","\n","print(model)\n","\n","import pickle\n","\n","string = pickle.dumps(model)\n","print(string)"],"execution_count":6,"outputs":[{"output_type":"stream","text":["IOPub data rate exceeded.\n","The notebook server will temporarily stop sending output\n","to the client in order to avoid crashing it.\n","To change this limit, set the config variable\n","`--NotebookApp.iopub_data_rate_limit`.\n","\n","Current values:\n","NotebookApp.iopub_data_rate_limit=1000000.0 (bytes/sec)\n","NotebookApp.rate_limit_window=3.0 (secs)\n","\n","/usr/local/lib/python3.6/dist-packages/sklearn/svm/base.py:193: FutureWarning: The default value of gamma will change from 'auto' to 'scale' in version 0.22 to account better for unscaled features. Set gamma explicitly to 'auto' or 'scale' to avoid this warning.\n","  \"avoid this warning.\", FutureWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"nck7FmZkmh0x","colab_type":"code","colab":{}},"source":["# Tiến hành test lại model bằng mục ảnh có tự tạo của máy"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"3Hmh0dClP3gX","colab_type":"code","colab":{}},"source":["import os\n","import cv2\n","import pandas as pd\n","import numpy as np\n","from google.colab.patches import cv2_imshow\n","\n","new_albums=[]\n","\n","folders= '/drive/My Drive/test/'\n","\n","k = pd.DataFrame(columns=['label'])\n","for image in os.listdir(folders):\n"," #if (image !='pos.16521206-15.jpg') :\n","  fileface= folders + image\n","  img = cv2.imread( fileface )\n","\n","  cascade = cv2.CascadeClassifier(cv2.data.haarcascades + \"haarcascade_frontalface_default.xml\")\n","\n","  faces = cascade.detectMultiScale(img)\n","\n","  if len(faces) != 0:\n","   (x, y, w, h) = faces[0]\n","   r = max(w, h) / 2\n","   centerx = x + w / 2\n","   centery = y + h / 2\n","   nx = int(centerx - r)\n","   ny = int(centery - r)\n","   nr = int(r * 2)\n","\n","   faceimg = img[ny:ny+nr, nx:nx+nr]\n","\n","   faceimg=cv2.resize(faceimg, (50,50))\n","   faceimg=cv2.cvtColor(faceimg, cv2.COLOR_BGR2GRAY)\n","   #cv2_imshow(faceimg)\n","   \n","   flat = faceimg.flatten()\n","   new_ar = pd.DataFrame([flat])\n","\n","   k=k.append({'label':image[0:3]},ignore_index=True)\n","   \n","   new_albums.append(new_ar)\n","\n","  else:\n","   a=pd.DataFrame ([[0]*2500], columns=range(2500))\n","\n","   k=k.append({'label':image[0:3]},ignore_index=True)\n","\n","   new_albums.append(a) \n"," #else:\n","   #break;  \n","   "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Bf7pQjFAmp5e","colab_type":"code","colab":{}},"source":["# Hàm đo độ chính xác, độ bao phủ"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"c5psJjdpx68G","colab_type":"code","colab":{}},"source":["def show_metrics(X, Y, string):\n","  import pickle\n","  print(Y.values.ravel())\n","  loadmodel = pickle.loads(string)\n","  pred = loadmodel.predict(X)\n","  print(pred)\n","  from sklearn import metrics\n","  print(\"Acurracy \", metrics.accuracy_score(Y.values.ravel(), pred))\n","  print(\"Precision \", metrics.precision_score(Y.values.ravel(), pred, pos_label='pos'))\n","  print(\"Recall \", metrics.recall_score(Y.values.ravel(), pred, pos_label='pos'))\n","  print(\"F1 \", metrics.f1_score(Y.values.ravel(), pred, pos_label='pos'))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"luVvDVqHmyPV","colab_type":"code","colab":{}},"source":["# Tính toán"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"r-5YJ8NkyzRl","colab_type":"code","outputId":"c9120bfa-71e2-41aa-e163-9c1230e0b26b","executionInfo":{"status":"ok","timestamp":1578477938173,"user_tz":-420,"elapsed":2575,"user":{"displayName":"Huy Phan Phat","photoUrl":"","userId":"01335892537279290623"}},"colab":{"base_uri":"https://localhost:8080/","height":255}},"source":["show_metrics(new_albums,k,string)"],"execution_count":23,"outputs":[{"output_type":"stream","text":["['neg' 'pos' 'neg' 'pos' 'pos' 'neg' 'neg' 'neg' 'neg' 'pos' 'neg' 'neg'\n"," 'pos' 'pos' 'neg' 'pos' 'pos' 'pos' 'neg' 'pos' 'pos' 'neg' 'pos' 'neg'\n"," 'neg' 'neg' 'pos' 'pos' 'neg' 'pos' 'neg' 'pos' 'neg' 'neg' 'pos' 'neg'\n"," 'neg' 'pos' 'neg' 'pos' 'pos' 'pos' 'neg' 'neg' 'pos' 'neg' 'pos' 'pos'\n"," 'pos' 'neg']\n","['neg' 'pos' 'pos' 'pos' 'pos' 'neg' 'neg' 'neg' 'neg' 'pos' 'neg' 'neg'\n"," 'pos' 'pos' 'neg' 'neg' 'pos' 'pos' 'neg' 'pos' 'pos' 'neg' 'pos' 'neg'\n"," 'neg' 'neg' 'pos' 'pos' 'neg' 'pos' 'neg' 'pos' 'neg' 'neg' 'pos' 'pos'\n"," 'neg' 'pos' 'pos' 'pos' 'pos' 'pos' 'neg' 'neg' 'pos' 'neg' 'pos' 'pos'\n"," 'pos' 'neg']\n","Acurracy  0.92\n","Precision  0.8888888888888888\n","Recall  0.96\n","F1  0.923076923076923\n"],"name":"stdout"}]}]}